#!/usr/bin/env perl

use Getopt::Long qw(:config pass_through);
use File::Spec::Functions qw(catfile);
use File::Temp qw(tempfile);
use IO::File;

use warnings;
use strict;
use vars qw(%ENV);

my $memory = 500;
GetOptions("memory=i" => \$memory);
my $home = $ENV{PGV_HOME};
my $jar_file = catfile($home,'lib','java','AnalyzeCovariates.jar');
my $resources_dir = catfile($home,'resources','gatk','R');
my $rscript = 'Rscript';
my $java_cmd = join(" ",'java',"-Xmx${memory}m",'-jar',$jar_file,'-Rscript',$rscript,'-resources',$resources_dir,@ARGV);
print STDERR $java_cmd,"\n";
my ($efh,$efn) = tempfile();
$efh->close();
system($java_cmd . " 2> $efn");
$efh = IO::File->new($efn);
my $error_found = 0;
while (my $line = <$efh>) {
  $error_found = 1 if ($line =~ /^#*\s*ERROR/);
  print STDERR $line;    
}
$efh->close();
unlink $efn;
exit $error_found ? 1 : 0;
