#!/usr/bin/env perl

use strict;
use warnings;

my ($irods_hdr) = @ARGV;

my %headers = ();

open(IRH,$irods_hdr) or die "could not open '$irods_hdr'\n";
my $last_pgid = undef;
while (my $line  = <IRH>) {
  next if $line =~ /^\@SQ/;
  my ($id,@rest) = split(/\t/,$line);
  if ($id eq '@HD') { # need to remove order information to avoid later problems with rare unsorted bam files in irods. 
     @rest = grep { $_ !~ /^SO/ } @rest;
  }
  push @{$headers{$id}}, $line;
  if ($id eq '@PG') {
    my ($id_tag) = grep { $_ =~ /^ID:/  } @rest;
    $id_tag =~ /^ID:(.+)/;
    $last_pgid = $1;
  }
}
close(IRH);

my $first_pg = undef;
while (my $line  = <STDIN>) {
  my ($id,@rest) = split(/\t/,$line);    
  if (defined $last_pgid && !defined($first_pg) && $id eq '@PG' && $line !~ /\tPP:/) {
     chomp $line;
     $line .= "\tPP:$last_pgid\n";
     $first_pg = $line;
  }
  push @{$headers{$id}}, $line;
}

# other manipulations.
push @{$headers{'@HD'}} , "\@HD\tVN:1.0\n" unless exists $headers{'@HD'}; 

foreach my $rg (@{$headers{'@RG'}}) {
  push @{$headers{'@CO'}}, "\@CO\tOriginal \@RG-line:\t" . $rg;
}

my @lists = map { $headers{$_} } (qw/@HD @SQ @RG @PG @CO/);
foreach my $list (@lists) {
  next unless defined $list && $#$list >= 0;
  foreach my $line (@$list) {
    print $line;
  }
}

exit 0;
